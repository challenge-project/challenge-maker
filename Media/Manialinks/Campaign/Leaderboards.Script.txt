#Struct SLBMostSPUser {
	Text Login;
	Text Nickname;
	Text Zone;
	Integer SP;
	Integer Rank;
}

#Struct SLBMostSP {
	Integer Count;
	Real Time;
	SLBMostSPUser[] Users;
}

#Struct SLBMostAPUser {
	Text Login;
	Text Nickname;
	Text Zone;
	Integer AP;
	Integer Rank;
}

#Struct SLBMostAP {
	Integer Count;
	Real Time;
	SLBMostAPUser[] Users;
}

#Struct SLBMostValidationsUser {
	Text Login;
	Text Nickname;
	Text Zone;
	Integer Count;
	Integer Rank;
}

#Struct SLBMostValidations {
	Real Time;
	SLBMostValidationsUser[] Users;
}

#Struct SLBOldestWorldRecordsRecord {
	Text MapUid;
	Text OriginalName;
	Text Challenge;
	Text Car;
	Integer Time;
	Text Login;
	Text Nickname;
	Text Zone;
	Integer Driven;
	Integer Rank;
}

#Struct SLBOldestWorldRecords {
	Real Time;
	SLBOldestWorldRecordsRecord[] Records;
}

#Struct SLBNewestValidationsValidation {
	Text MapUid;
	Text OriginalName;
	Text Challenge;
	Text Car;
	Text Login;
	Text Nickname;
	Text Zone;
	Integer Driven;
	Integer Rank;
}

#Struct SLBNewestValidations {
	Real Time;
	SLBNewestValidationsValidation[] Validations;
}

#Struct SLBMostRecordsDrivenRecord {
	Text MapUid;
	Text OriginalName;
	Text Challenge;
	Text Car;
	Integer WR;
	Text WRHolderLogin;
	Text WRHolderNickname;
	Integer Count;
	Integer Rank;
}

#Struct SLBMostRecordsDriven {
	Real Time;
	SLBMostRecordsDrivenRecord[] Combinations;
}

#Struct SLBYourValidationsValidation {
	Text MapUid;
	Text OriginalName;
	Text Challenge;
	Text Car;
	Integer Driven;
}

#Struct SLBYourValidations {
	Real Time;
	SLBYourValidationsValidation[] Validations;
}

#Struct SLBYourWorldRecordsRecord {
	Text MapUid;
	Text OriginalName;
	Text Challenge;
	Text Car;
	Integer Time;
	Integer Driven;
}

#Struct SLBYourWorldRecords {
	Real Time;
	SLBYourWorldRecordsRecord[] Records;
}

#Struct SLBMostRatedCombination {
	Text MapUid;
	Text OriginalName;
	Text Challenge;
	Text Car;
	Integer WR;
	Text WRHolderLogin;
	Text WRHolderNickname;
	Real Difficulty;
	Real Quality;
	Integer Rank;
}

#Struct SLBMostRated {
	Real Time;
	SLBMostRatedCombination[] Ratings;
}

Text TimeToTextWithMilli(Integer _Time) {
	return TextLib::TimeToText(_Time, True)^TextLib::SubText(""^_Time, TextLib::Length(""^_Time)-1, 1);
}

***RequestLeaderboard***
***
declare Zone = "";
if(CurrentZone.existskey(LB)) {
	declare Text[] Zns;
	for(I, 0, CurrentZone[LB])
		Zns.add(Zones[I]);
	Zone = TextLib::Join("|", Zns);
}

declare Campaign = ""; if(CurrentCampaign[LB] > 0) Campaign = Campaigns[CurrentCampaign[LB]];
declare Challenge = ""; if(CurrentChallenge[LB] > 0) Challenge = Challenges[CurrentChallenge[LB]];
declare Car = ""; if(CurrentCar[LB] > 0) Car = Cars[CurrentCar[LB]];

switch(LB) {
	case "FRAME_OVERALL_SKILLPOINT": {
		SendCustomEvent("RequestLeaderboard", ["MostSP", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_OVERALL_ACTIVITY": {
		SendCustomEvent("RequestLeaderboard", ["MostAP", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_MOST_VALIDATIONS": {
		SendCustomEvent("RequestLeaderboard", ["MostValidations", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_OLDEST_WORLD_RECORDS": {
		SendCustomEvent("RequestLeaderboard", ["OldestWorldRecords", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_NEWEST_VALIDATIONS": {
		SendCustomEvent("RequestLeaderboard", ["NewestValidations", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_MOST_RECORDS_DRIVEN": {
		SendCustomEvent("RequestLeaderboard", ["MostRecordsDriven", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_YOUR_VALIDATIONS": {
		SendCustomEvent("RequestLeaderboard", ["YourValidations", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_YOUR_WORLD_RECORDS": {
		SendCustomEvent("RequestLeaderboard", ["YourWorldRecords", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_MOST_DIFFICULT_COMBINATIONS": {
		SendCustomEvent("RequestLeaderboard", ["MostDifficult", Campaign, Challenge, Car, Zone]);
	}
	case "FRAME_MOST_QUALITY_COMBINATIONS": {
		SendCustomEvent("RequestLeaderboard", ["MostQuality", Campaign, Challenge, Car, Zone]);		
	}
}
***

***Start***
***
Page.GetClassChildren("LOADING", Page.MainFrame, True);

declare Frame_Other_Leaderboards_Clip = (Page.GetFirstChild("FRAME_OTHER_LEADERBOARDS_CLIP") as CMlFrame);
declare Quad_Scroll_Major = (Page.GetFirstChild("QUAD_SCROLL_MAJOR") as CMlQuad);
declare Quad_Scroll_Major_BG = (Page.GetFirstChild("QUAD_SCROLL_MAJOR_BG") as CMlQuad);

Quad_Scroll_Major.Size.Y = Frame_Other_Leaderboards_Clip.ClipWindowSize.Y/(Frame_Other_Leaderboards_Clip.ClipWindowSize.Y+Frame_Other_Leaderboards_Clip.ScrollMax.Y)*Quad_Scroll_Major_BG.Size.Y;

declare Zones = TextLib::Split("|", LocalUser.ZonePath);
declare Cars = ["{{{{ALL_CARS}}}}", "CanyonCar", "StadiumCar", "ValleyCar", "LagoonCar", "DesertCar", "RallyCar", "SnowCar", "IslandCar", "BayCar", "CoastCar"];
declare Campaigns = ["{{{{ALL_CAMPAIGNS}}}}"];
declare Challenges = ["{{{{ALL_CHALLENGES}}}}"];

declare Integer[Text] CurrentCampaign = [
	"FRAME_OVERALL_SKILLPOINT" => 0,
	"FRAME_OVERALL_ACTIVITY" => 0,
	"FRAME_MOST_VALIDATIONS" => 0,
	"FRAME_OLDEST_WORLD_RECORDS" => 0,
	"FRAME_NEWEST_VALIDATIONS" => 0,
	"FRAME_MOST_RECORDS_DRIVEN" => 0,
	"FRAME_YOUR_VALIDATIONS" => 0,
	"FRAME_YOUR_WORLD_RECORDS" => 0,
	"FRAME_MOST_DIFFICULT_COMBINATIONS" => 0,
	"FRAME_MOST_QUALITY_COMBINATIONS" => 0
];
declare Integer[Text] CurrentChallenge = [
	"FRAME_OVERALL_SKILLPOINT" => 0,
	"FRAME_OVERALL_ACTIVITY" => 0,
	"FRAME_MOST_VALIDATIONS" => 0,
	"FRAME_OLDEST_WORLD_RECORDS" => 0,
	"FRAME_NEWEST_VALIDATIONS" => 0,
	"FRAME_MOST_RECORDS_DRIVEN" => 0,
	"FRAME_YOUR_VALIDATIONS" => 0,
	"FRAME_YOUR_WORLD_RECORDS" => 0,
	"FRAME_MOST_DIFFICULT_COMBINATIONS" => 0,
	"FRAME_MOST_QUALITY_COMBINATIONS" => 0
];
declare Integer[Text] CurrentCar = [
	"FRAME_OVERALL_SKILLPOINT" => 0,
	"FRAME_OVERALL_ACTIVITY" => 0,
	"FRAME_MOST_VALIDATIONS" => 0,
	"FRAME_OLDEST_WORLD_RECORDS" => 0,
	"FRAME_NEWEST_VALIDATIONS" => 0,
	"FRAME_MOST_RECORDS_DRIVEN" => 0,
	"FRAME_YOUR_VALIDATIONS" => 0,
	"FRAME_YOUR_WORLD_RECORDS" => 0,
	"FRAME_MOST_DIFFICULT_COMBINATIONS" => 0,
	"FRAME_MOST_QUALITY_COMBINATIONS" => 0
];
declare Integer[Text] CurrentZone = [
	"FRAME_OVERALL_SKILLPOINT" => 0,
	"FRAME_OVERALL_ACTIVITY" => 0,
	"FRAME_NEWEST_VALIDATIONS" => 0,
	"FRAME_MOST_RECORDS_DRIVEN" => 0
];

declare End = -1;
***

***Loop***
***
foreach(Event in PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON_VALIDATIONS": {
					OpenLink("https://challenge.bigbang1112.eu/validations.php?title="^LoadedTitle.TitleId, ::LinkType::ExternalBrowser);
				}
				case "QUAD_BUTTON_EXIT": {
					SendCustomEvent("Exit", []);
				}
				case "QUAD_NEXT": {
					switch(Event.Control.Parent.ControlId) {
						case "FRAME_CAMPAIGN": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentCampaign[LB] < Campaigns.count-1) CurrentCampaign[LB] += 1;
							else CurrentCampaign[LB] = 0;

							(Event.Control.Parent.GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = Campaigns[CurrentCampaign[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();
							
							+++RequestLeaderboard+++
						}
						case "FRAME_CHALLENGE": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentChallenge[LB] < Challenges.count-1) CurrentChallenge[LB] += 1;
							else CurrentChallenge[LB] = 0;

							(Event.Control.Parent.GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = Challenges[CurrentChallenge[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();
							
							+++RequestLeaderboard+++
						}
						case "FRAME_CAR": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentCar[LB] < Cars.count-1) CurrentCar[LB] += 1;
							else CurrentCar[LB] = 0;

							(Event.Control.Parent.GetFirstChild("LABEL_CAR") as CMlLabel).Value = Cars[CurrentCar[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();
							
							+++RequestLeaderboard+++
						}
						case "FRAME_ZONE": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentZone[LB] < Zones.count-1) CurrentZone[LB] += 1;
							else CurrentZone[LB] = 0;
							(Event.Control.Parent.GetFirstChild("LABEL_ZONE") as CMlLabel).Value = "|Zone|"^Zones[CurrentZone[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();
							
							+++RequestLeaderboard+++
						}
					}
				}
				case "QUAD_PREVIOUS": {
					switch(Event.Control.Parent.ControlId) {
						case "FRAME_CAMPAIGN": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentCampaign[LB] > 0) CurrentCampaign[LB] -= 1;
							else CurrentCampaign[LB] = Campaigns.count-1;

							(Event.Control.Parent.GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = Campaigns[CurrentCampaign[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();
							
							+++RequestLeaderboard+++
						}
						case "FRAME_CHALLENGE": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentChallenge[LB] > 0) CurrentChallenge[LB] -= 1;
							else CurrentChallenge[LB] = Challenges.count-1;

							(Event.Control.Parent.GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = Challenges[CurrentChallenge[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();

							+++RequestLeaderboard+++
						}
						case "FRAME_CAR": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentCar[LB] > 0) CurrentCar[LB] -= 1;
							else CurrentCar[LB] = Cars.count-1;

							(Event.Control.Parent.GetFirstChild("LABEL_CAR") as CMlLabel).Value = Cars[CurrentCar[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();

							+++RequestLeaderboard+++
						}
						case "FRAME_ZONE": {
							declare LB = Event.Control.Parent.Parent.ControlId;
							if(CurrentZone[LB] > 0) CurrentZone[LB] -= 1;
							else CurrentZone[LB] = Zones.count-1;
							(Event.Control.Parent.GetFirstChild("LABEL_ZONE") as CMlLabel).Value = "|Zone|"^Zones[CurrentZone[LB]];
							Event.Control.Parent.Parent.GetFirstChild("QUAD_LOADING").Show();
							Event.Control.Parent.Parent.GetFirstChild("FRAME_LEADERBOARD").Hide();

							+++RequestLeaderboard+++
						}
					}
				}
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "Show": {
					End = -1;

					CurrentCampaign["FRAME_OVERALL_SKILLPOINT"] = 0;
					CurrentChallenge["FRAME_OVERALL_SKILLPOINT"] = 0;
					CurrentCar["FRAME_OVERALL_SKILLPOINT"] = 0;
					CurrentZone["FRAME_OVERALL_SKILLPOINT"] = 0;
					(((Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					(((Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT") as CMlFrame).GetFirstChild("FRAME_ZONE") as CMlFrame).GetFirstChild("LABEL_ZONE") as CMlLabel).Value = "|Zone|World";

					CurrentCampaign["FRAME_OVERALL_ACTIVITY"] = 0;
					CurrentChallenge["FRAME_OVERALL_ACTIVITY"] = 0;
					CurrentCar["FRAME_OVERALL_ACTIVITY"] = 0;
					CurrentZone["FRAME_OVERALL_ACTIVITY"] = 0;
					(((Page.GetFirstChild("FRAME_OVERALL_ACTIVITY") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_OVERALL_ACTIVITY") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_OVERALL_ACTIVITY") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					(((Page.GetFirstChild("FRAME_OVERALL_ACTIVITY") as CMlFrame).GetFirstChild("FRAME_ZONE") as CMlFrame).GetFirstChild("LABEL_ZONE") as CMlLabel).Value = "|Zone|World";

					CurrentCampaign["FRAME_MOST_VALIDATIONS"] = 0;
					CurrentChallenge["FRAME_MOST_VALIDATIONS"] = 0;
					CurrentCar["FRAME_MOST_VALIDATIONS"] = 0;
					(((Page.GetFirstChild("FRAME_MOST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_MOST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_MOST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					
					CurrentCampaign["FRAME_OLDEST_WORLD_RECORDS"] = 0;
					CurrentChallenge["FRAME_OLDEST_WORLD_RECORDS"] = 0;
					CurrentCar["FRAME_OLDEST_WORLD_RECORDS"] = 0;
					(((Page.GetFirstChild("FRAME_OLDEST_WORLD_RECORDS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_OLDEST_WORLD_RECORDS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_OLDEST_WORLD_RECORDS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";

					CurrentCampaign["FRAME_NEWEST_VALIDATIONS"] = 0;
					CurrentChallenge["FRAME_NEWEST_VALIDATIONS"] = 0;
					CurrentCar["FRAME_NEWEST_VALIDATIONS"] = 0;
					(((Page.GetFirstChild("FRAME_NEWEST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_NEWEST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_NEWEST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					(((Page.GetFirstChild("FRAME_NEWEST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_ZONE") as CMlFrame).GetFirstChild("LABEL_ZONE") as CMlLabel).Value = "|Zone|World";
					
					CurrentCampaign["FRAME_MOST_RECORDS_DRIVEN"] = 0;
					CurrentChallenge["FRAME_MOST_RECORDS_DRIVEN"] = 0;
					CurrentCar["FRAME_MOST_RECORDS_DRIVEN"] = 0;
					(((Page.GetFirstChild("FRAME_MOST_RECORDS_DRIVEN") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_MOST_RECORDS_DRIVEN") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_MOST_RECORDS_DRIVEN") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					(((Page.GetFirstChild("FRAME_MOST_RECORDS_DRIVEN") as CMlFrame).GetFirstChild("FRAME_ZONE") as CMlFrame).GetFirstChild("LABEL_ZONE") as CMlLabel).Value = "|Zone|World";
					
					CurrentCampaign["FRAME_YOUR_VALIDATIONS"] = 0;
					CurrentChallenge["FRAME_YOUR_VALIDATIONS"] = 0;
					CurrentCar["FRAME_YOUR_VALIDATIONS"] = 0;
					(((Page.GetFirstChild("FRAME_YOUR_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_YOUR_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_YOUR_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					
					CurrentCampaign["FRAME_YOUR_WORLD_RECORDS"] = 0;
					CurrentChallenge["FRAME_YOUR_WORLD_RECORDS"] = 0;
					CurrentCar["FRAME_YOUR_WORLD_RECORDS"] = 0;
					(((Page.GetFirstChild("FRAME_YOUR_WORLD_RECORDS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_YOUR_WORLD_RECORDS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_YOUR_WORLD_RECORDS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					
					CurrentCampaign["FRAME_MOST_DIFFICULT_COMBINATIONS"] = 0;
					CurrentChallenge["FRAME_MOST_DIFFICULT_COMBINATIONS"] = 0;
					CurrentCar["FRAME_MOST_DIFFICULT_COMBINATIONS"] = 0;
					(((Page.GetFirstChild("FRAME_MOST_DIFFICULT_COMBINATIONS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_MOST_DIFFICULT_COMBINATIONS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_MOST_DIFFICULT_COMBINATIONS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
					
					CurrentCampaign["FRAME_MOST_QUALITY_COMBINATIONS"] = 0;
					CurrentChallenge["FRAME_MOST_QUALITY_COMBINATIONS"] = 0;
					CurrentCar["FRAME_MOST_QUALITY_COMBINATIONS"] = 0;
					(((Page.GetFirstChild("FRAME_MOST_QUALITY_COMBINATIONS") as CMlFrame).GetFirstChild("FRAME_CAMPAIGN") as CMlFrame).GetFirstChild("LABEL_CAMPAIGN") as CMlLabel).Value = "{{{{ALL_CAMPAIGNS}}}}";
					(((Page.GetFirstChild("FRAME_MOST_QUALITY_COMBINATIONS") as CMlFrame).GetFirstChild("FRAME_CHALLENGE") as CMlFrame).GetFirstChild("LABEL_CHALLENGE") as CMlLabel).Value = "{{{{ALL_CHALLENGES}}}}";
					(((Page.GetFirstChild("FRAME_MOST_QUALITY_COMBINATIONS") as CMlFrame).GetFirstChild("FRAME_CAR") as CMlFrame).GetFirstChild("LABEL_CAR") as CMlLabel).Value = "{{{{ALL_CARS}}}}";
				
					Page.GetFirstChild("FRAME_BOTTOM").RelativePosition_V3.Y = -30.;
					AnimMgr.Add(Page.GetFirstChild("FRAME_BOTTOM"), "<frame pos=\"0 0\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					
					Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT").RelativePosition_V3.X = -281.;
					AnimMgr.Add(Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT"), "<frame pos=\"-110 80\" />", 1000, CAnimManager::EAnimManagerEasing::QuadOut);

					Page.GetFirstChild("FRAME_OVERALL_ACTIVITY").RelativePosition_V3.X = -200.;
					AnimMgr.Add(Page.GetFirstChild("FRAME_OVERALL_ACTIVITY"), "<frame pos=\"-29 80\" />", 800, CAnimManager::EAnimManagerEasing::QuadOut);
					
					Page.GetFirstChild("FRAME_OTHER_LEADERBOARDS").RelativePosition_V3.X = 150.;
					AnimMgr.Add(Page.GetFirstChild("FRAME_OTHER_LEADERBOARDS"), "<frame pos=\"0 0\" />", 800, CAnimManager::EAnimManagerEasing::QuadOut);
				}
				case "Hide": {
					End = Now;
					AnimMgr.Add(Page.GetFirstChild("FRAME_BOTTOM"), "<frame pos=\"0 -30\" />", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT"), "<frame pos=\"-281 80\" />", 600, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Page.GetFirstChild("FRAME_OVERALL_ACTIVITY"), "<frame pos=\"-200 80\" />", 800, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Page.GetFirstChild("FRAME_OTHER_LEADERBOARDS"), "<frame pos=\"150 0\" />", 800, CAnimManager::EAnimManagerEasing::QuadOut);
				}
				case "UpdateFilters": {
					Campaigns = ["{{{{ALL_CAMPAIGNS}}}}"];

					declare Text[] CampaignNames for Page;
					foreach(C in CampaignNames)
						Campaigns.add(C);

					Challenges = ["{{{{ALL_CHALLENGES}}}}"];

					declare Text[] CampaignChallenges for Page;
					foreach(C in CampaignChallenges)
						Challenges.add(C);
				}
				case "UpdateLeaderboard": {
					declare Type = Event.CustomEventData[0];
					declare Data = Event.CustomEventData[1];

					declare CMlFrame LeaderboardFrame;
					
					switch (Type) {
						case "MostSP": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_OVERALL_SKILLPOINT") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBMostSP Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Users.count > I) {
										declare User = Leaderboard.Users[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(User.Rank, 2);
										if(User.Nickname == "")
											(Frame.GetFirstChild("LABEL_NICKNAME") as CMlLabel).Value = User.Login;
										else
											(Frame.GetFirstChild("LABEL_NICKNAME") as CMlLabel).Value = User.Nickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = User.SP^"";

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "MostAP": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_OVERALL_ACTIVITY") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBMostAP Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Users.count > I) {
										declare User = Leaderboard.Users[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(User.Rank, 2);
										if(User.Nickname == "")
											(Frame.GetFirstChild("LABEL_NICKNAME") as CMlLabel).Value = User.Login;
										else
											(Frame.GetFirstChild("LABEL_NICKNAME") as CMlLabel).Value = User.Nickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = User.AP^"";

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "MostValidations": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_MOST_VALIDATIONS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBMostValidations Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Users.count > I) {
										declare User = Leaderboard.Users[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(User.Rank, 2);
										if(User.Nickname == "")
											(Frame.GetFirstChild("LABEL_NICKNAME") as CMlLabel).Value = User.Login;
										else
											(Frame.GetFirstChild("LABEL_NICKNAME") as CMlLabel).Value = User.Nickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = User.Count^"";

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "OldestWorldRecords": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_OLDEST_WORLD_RECORDS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBOldestWorldRecords Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Records.count > I) {
										declare Record = Leaderboard.Records[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(Record.Rank, 2);
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Record.OriginalName ^ " ("^Record.Challenge^") $o - " ^ Record.Car;
										if(Record.Nickname == "")
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = TimeToTextWithMilli(Record.Time) ^ " {{{{by}}}} " ^ Record.Login;
										else
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = TimeToTextWithMilli(Record.Time) ^ " {{{{by}}}} " ^ Record.Nickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = TimeLib::FormatDate(Record.Driven^"", TimeLib::EDateFormats::DateShort);
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Record.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "NewestValidations": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_NEWEST_VALIDATIONS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBNewestValidations Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Validations.count > I) {
										declare Validation = Leaderboard.Validations[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(Validation.Rank, 2);
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Validation.OriginalName ^ " ("^Validation.Challenge^") $o - " ^ Validation.Car;
										if(Validation.Nickname == "")
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = TextLib::ToLowerCase("{{{{VALIDATED_BY}}}} ") ^ Validation.Login;
										else
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = TextLib::ToLowerCase("{{{{VALIDATED_BY}}}} ") ^ Validation.Nickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = TimeLib::FormatDelta(Validation.Driven^"", TimeLib::GetCurrent(), TimeLib::EDurationFormats::Abbreviated);
										Frame.GetFirstChild("LABEL_SCORE").DataAttributeSet("driven", Validation.Driven^"");
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Validation.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "MostRecords": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_MOST_RECORDS_DRIVEN") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBMostRecordsDriven Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Combinations.count > I) {
										declare Combination = Leaderboard.Combinations[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(Combination.Rank, 2);
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Combination.OriginalName ^ " ("^Combination.Challenge^") $o - " ^ Combination.Car;
										if(Combination.WRHolderNickname == "")
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = "WR: "^TimeToTextWithMilli(Combination.WR)^" {{{{by}}}} " ^ Combination.WRHolderLogin;
										else
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = "WR: "^TimeToTextWithMilli(Combination.WR)^" {{{{by}}}} " ^ Combination.WRHolderNickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = Combination.Count^"";
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Combination.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "YourValidations": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_YOUR_VALIDATIONS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBYourValidations Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Validations.count > I) {
										declare Combination = Leaderboard.Validations[I];
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Combination.OriginalName ^ " $n("^Combination.Challenge^")$z $o - " ^ Combination.Car;
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Combination.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "YourWorldRecords": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_YOUR_WORLD_RECORDS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBYourWorldRecords Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Records.count > I) {
										declare Combination = Leaderboard.Records[I];
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Combination.OriginalName ^ " $n("^Combination.Challenge^")$z $o - " ^ Combination.Car;
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Combination.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "MostDifficult": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_MOST_DIFFICULT_COMBINATIONS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBMostRated Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Ratings.count > I) {
										declare Combination = Leaderboard.Ratings[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(Combination.Rank, 2);
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Combination.OriginalName ^ " ("^Combination.Challenge^") $o - " ^ Combination.Car;
										if(Combination.WRHolderNickname == "")
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = "WR: "^TimeToTextWithMilli(Combination.WR)^" {{{{by}}}} " ^ Combination.WRHolderLogin;
										else
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = "WR: "^TimeToTextWithMilli(Combination.WR)^" {{{{by}}}} " ^ Combination.WRHolderNickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = TextLib::FormatReal(Combination.Difficulty*100, 2, True, True)^" %";
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Combination.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						case "MostQuality": {
							LeaderboardFrame = (Page.GetFirstChild("FRAME_MOST_QUALITY_COMBINATIONS") as CMlFrame);
							declare Frame_LB = (LeaderboardFrame.GetFirstChild("FRAME_LEADERBOARD") as CMlFrame);
							declare Quad_Loading = LeaderboardFrame.GetFirstChild("QUAD_LOADING");

							if(Data == "") {
								Frame_LB.Hide();
								Quad_Loading.Show();
							}
							else {
								declare SLBMostRated Leaderboard;
								declare Success = Leaderboard.fromjson(Data);

								Quad_Loading.Hide();
								Frame_LB.Show();

								for(I, 0, Frame_LB.Controls.count-1) {
									declare Frame = (Frame_LB.Controls[I] as CMlFrame);

									if(Leaderboard.Ratings.count > I) {
										declare Combination = Leaderboard.Ratings[I];
										(Frame.GetFirstChild("LABEL_PLACE") as CMlLabel).Value = TextLib::FormatInteger(Combination.Rank, 2);
										(Frame.GetFirstChild("LABEL_MAP") as CMlLabel).Value = Combination.OriginalName ^ " ("^Combination.Challenge^") $o - " ^ Combination.Car;
										if(Combination.WRHolderNickname == "")
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = "WR: "^TimeToTextWithMilli(Combination.WR)^" {{{{by}}}} " ^ Combination.WRHolderLogin;
										else
											(Frame.GetFirstChild("LABEL_DRIVER") as CMlLabel).Value = "WR: "^TimeToTextWithMilli(Combination.WR)^" {{{{by}}}} " ^ Combination.WRHolderNickname;
										(Frame.GetFirstChild("LABEL_SCORE") as CMlLabel).Value = TextLib::FormatReal(Combination.Quality*100, 2, True, True)^" %";
										(Frame.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl("file://Thumbnails/MapUid/"^Combination.MapUid);

										foreach(Control in Frame.Controls) {
											switchtype(Control) {
												case CMlLabel: {
													(Control as CMlLabel).Opacity = 0.;
												}
												case CMlQuad: {
													(Control as CMlQuad).Opacity = 0.;
												}
												case CMlFrame: {
													foreach(C in (Control as CMlFrame).Controls) {
														switchtype(C) {
															case CMlLabel: {
																(C as CMlLabel).Opacity = 0.;
															}
															case CMlQuad: {
																(C as CMlQuad).Opacity = 0.;
															}
														}
														AnimMgr.Flush(C);
														AnimMgr.Add(C, "<quad opacity=\".5\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
													}
												}
											}
											AnimMgr.Flush(Control);
											AnimMgr.Add(Control, "<quad opacity=\"1\" />", Now+I*50, 500, CAnimManager::EAnimManagerEasing::QuadOut);
										}

										Frame.Show();
									}
									else {
										Frame.Hide();
									}
								}
							}
						}
						default: {

						}
					}
				}
			}
		}
	}
}

Quad_Scroll_Major.RelativePosition_V3.Y = -Frame_Other_Leaderboards_Clip.ScrollOffset.Y/Frame_Other_Leaderboards_Clip.ScrollMax.Y*(Quad_Scroll_Major_BG.Size.Y-Quad_Scroll_Major.Size.Y);

if(End != -1) {
	if(Now - End > 1000) {
		SendCustomEvent("Hide_Response", []);
		End = -1;
	}
}

foreach(Control in ((Page.GetFirstChild("FRAME_NEWEST_VALIDATIONS") as CMlFrame).GetFirstChild("FRAME_LEADERBOARD") as CMlFrame).Controls) {
	declare Label = ((Control as CMlFrame).GetFirstChild("LABEL_SCORE") as CMlLabel);
	declare Driven = Label.DataAttributeGet("driven");
	if(Driven != "") {
		Label.Value = TimeLib::FormatDelta(Driven, TimeLib::GetCurrent(), TimeLib::EDurationFormats::Abbreviated);
	}
}

foreach(Control,Page.GetClassChildren_Result)
	Control.RelativeRotation += Period / 5.0;
***