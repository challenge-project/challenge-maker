declare CMlQuad CurrentMapFocused;

Void UpdateQuickMapInfo(CMlQuad _QuadMap) {
	declare Frame_QuickMapInfo = (Page.GetFirstChild("FRAME_QUICKMAPINFO") as CMlFrame);

	if(_QuadMap == Null) {
		Frame_QuickMapInfo.Hide();
	}
	else {
		declare Name = _QuadMap.Parent.DataAttributeGet("name");
		declare Author = _QuadMap.Parent.DataAttributeGet("author");
		Frame_QuickMapInfo.RelativePosition_V3 = _QuadMap.AbsolutePosition_V3;
		(Frame_QuickMapInfo.GetFirstChild("QUAD_THUMBNAIL") as CMlQuad).ChangeImageUrl(_QuadMap.ImageUrl);
		(Frame_QuickMapInfo.GetFirstChild("LABEL_NAME") as CMlLabel).SetText(Name);
		Frame_QuickMapInfo.Show();
	}
}

***Start***
***
declare Frame_Campaigns = (Page.GetFirstChild("FRAME_CAMPAIGNS") as CMlFrame);
declare Frame_Campaign_Menu = (Page.GetFirstChild("FRAME_CAMPAIGN_MENU") as CMlFrame);
declare Frame_QuickMapInfo = (Page.GetFirstChild("FRAME_QUICKMAPINFO") as CMlFrame);
declare Quad_Scrollbar = (Page.GetFirstChild("QUAD_CAMPAIGN_SCROLL") as CMlQuad);

declare HoldItSteady = False;
declare HoldItSteadyLoc = 0.;
declare HoldItSteadyMouse = 0.;

declare CampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;
declare LastCampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;

declare CampaignsSize = (Frame_Campaigns.Controls.count-1) * 45.;

Frame_Campaign_Menu.ScrollActive = True;
Frame_Campaign_Menu.ScrollGrid = <15.,15.>;
if(Frame_Campaign_Menu.GetFirstChild("QUAD_CAMPAIGN_MENU").Size.Y >= 150)
	Frame_Campaign_Menu.ScrollMax = <0.,Frame_Campaign_Menu.GetFirstChild("QUAD_CAMPAIGN_MENU").Size.Y-150>;
else Frame_Campaign_Menu.ScrollMax.Y = 0.;
Frame_Campaign_Menu.ScrollMin = <0.,0.>;

declare OldScrollOffset = Frame_Campaign_Menu.ScrollOffset;
declare OldScrollAnimOffset = Frame_Campaign_Menu.ScrollAnimOffset;

if(Frame_Campaign_Menu.ScrollMax.Y > 0) {
	declare VisibleRatio = 150/(150+Frame_Campaign_Menu.ScrollMax.Y);
	Quad_Scrollbar.Show();
	Quad_Scrollbar.Size.Y = 150*VisibleRatio;
	Quad_Scrollbar.RelativePosition_V3.Y = -TextLib::ToInteger(Frame_Campaign_Menu.DataAttributeGet("startscroll"))*(150-Quad_Scrollbar.Size.Y)-5;
}

declare RevealMapInfoTime = 0;

declare CurrentCampaign = 0;
declare LastCampaign = 0;
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_CAMPAIGN": {
					HoldItSteady = True;
					HoldItSteadyLoc = Frame_Campaigns.RelativePosition_V3.X;
					HoldItSteadyMouse = MouseX;
				}
				case "QUAD_BUTTON_EXIT": {
					SendCustomEvent("Exit", []);
				}
				case "QUAD_MAP": {
					SendCustomEvent("Map", [Event.Control.Parent.DataAttributeGet("name"),
					Event.Control.Parent.DataAttributeGet("author"),
					Event.Control.Parent.DataAttributeGet("uid"),
					Event.Control.Parent.DataAttributeGet("style")]);
				}
				case "QUAD_BACK": {
					if(Event.Control.Parent.Parent.ControlId == "FRAME_CAMPAIGN_CONTROL" && CurrentCampaign-1 >= 0) {
						AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^(CurrentCampaign-1)*-45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					}
				}
				case "QUAD_NEXT": {
					if(Event.Control.Parent.Parent.ControlId == "FRAME_CAMPAIGN_CONTROL" && CurrentCampaign+1 < Frame_Campaigns.Controls.count) {
						AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^(CurrentCampaign+1)*-45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					}
				}
			}
		}
		case CMlScriptEvent::Type::MouseOver: {
			if(Event.ControlId == "QUAD_MAP") {
				declare Quad = (Event.Control as CMlQuad);
				CurrentMapFocused = Quad;
				RevealMapInfoTime = Now;
			}
		}
		case CMlScriptEvent::Type::MouseOut: {
			if(Event.ControlId == "QUAD_MAP") {
				CurrentMapFocused = Null; 
			}
		}
		case CMlScriptEvent::Type::MenuNavigation: {
			switch(Event.MenuNavAction) {
				case CMlScriptEvent::EMenuNavAction::ScrollUp: {
					
				}
				case CMlScriptEvent::EMenuNavAction::ScrollDown: {
					
				}
			}
		}
	}
}

CurrentCampaign = MathLib::NearestInteger(Frame_Campaigns.RelativePosition_V3.X / -45.);
if(CurrentCampaign != LastCampaign) {
	LastCampaign = CurrentCampaign;
}

if(MouseLeftButton && HoldItSteady) {
	AnimMgr.Flush(Frame_Campaigns);
	Frame_Campaigns.RelativePosition_V3.X = MathLib::Clamp(HoldItSteadyLoc - (HoldItSteadyMouse - MouseX)*3,-CampaignsSize,0.);
}
else if(HoldItSteady) {
	AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^CurrentCampaign*-45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
	HoldItSteady = False;
}

CampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;

declare VisibleRatio = 150/(150+Frame_Campaign_Menu.ScrollMax.Y);
Quad_Scrollbar.Size.Y = 150*VisibleRatio;

if(CampaignPosition != LastCampaignPosition) {
	Frame_Campaign_Menu.RelativePosition_V3.X = CampaignPosition;
	LastCampaignPosition = CampaignPosition;
}

if(Frame_Campaign_Menu.ScrollOffset != OldScrollOffset) {
	OldScrollOffset = Frame_Campaign_Menu.ScrollOffset;

	declare ScrollRatio = 0.;
	if(Frame_Campaign_Menu.ScrollMax.Y != 0)
		ScrollRatio = Frame_Campaign_Menu.ScrollOffset.Y / Frame_Campaign_Menu.ScrollMax.Y;
	Quad_Scrollbar.RelativePosition_V3.Y = -ScrollRatio*(150-Quad_Scrollbar.Size.Y)-5;
}

if(Frame_Campaign_Menu.ScrollAnimOffset != OldScrollAnimOffset) {
	Frame_QuickMapInfo.RelativePosition_V3 += Frame_Campaign_Menu.ScrollAnimOffset - OldScrollAnimOffset;
	OldScrollAnimOffset = Frame_Campaign_Menu.ScrollAnimOffset;
}

UpdateQuickMapInfo(CurrentMapFocused);

declare ClipSize = AnimLib::EaseOutQuad(Now - RevealMapInfoTime, 0., 145., 500);
Frame_QuickMapInfo.ClipWindowSize = <ClipSize,ClipSize>;
//Frame_QuickMapInfo.ClipWindowRelativePosition.X = AnimLib::EaseOutQuad(Now - RevealMapInfoTime, -100., 122.5, 300);
***