Void UpdateCampaignType() {
	declare Text CampaignType for Page;
	if(CampaignType == "Nadeo") {
		(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
		(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
	}
	else if(CampaignType == "Custom") {
		(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
		(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
	}
}

***Start***
***
declare Frame_Campaigns = (Page.GetFirstChild("FRAME_CAMPAIGNS") as CMlFrame);
declare Frame_Campaign_Menu = (Page.GetFirstChild("FRAME_CAMPAIGN_MENU") as CMlFrame);

declare HoldItSteady = False;
declare HoldItSteadyLoc = 0.;
declare HoldItSteadyMouse = 0.;

declare CampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;
declare LastCampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;

declare CampaignsSize = (Frame_Campaigns.Controls.count-1) * 45.;

Frame_Campaign_Menu.ScrollActive = True;
Frame_Campaign_Menu.ScrollGrid = <15.,15.>;
Frame_Campaign_Menu.ScrollMax = <0.,Frame_Campaign_Menu.GetFirstChild("QUAD_CAMPAIGN_MENU").Size.Y-150>;
if(Frame_Campaign_Menu.ScrollMax.Y < 0) Frame_Campaign_Menu.ScrollMax.Y = 0.;
Frame_Campaign_Menu.ScrollMin = <0.,0.>;

declare OldScrollOffset = Frame_Campaign_Menu.ScrollOffset;
declare OldScrollAnimOffset = Frame_Campaign_Menu.ScrollAnimOffset;

declare Quad_Scrollbar = (Page.GetFirstChild("QUAD_CAMPAIGN_SCROLL") as CMlQuad);

declare WaitingToScroll = False;

if(Frame_Campaign_Menu.ScrollMax.Y > 0) {
	declare VisibleRatio = 150/(150+Frame_Campaign_Menu.ScrollMax.Y);
	Quad_Scrollbar.Show();
	Quad_Scrollbar.Size.Y = 150*VisibleRatio;
	Quad_Scrollbar.RelativePosition_V3.Y = -TextLib::ToInteger(Frame_Campaign_Menu.DataAttributeGet("startscroll"))*(150-Quad_Scrollbar.Size.Y)-5;
}

declare Wat = Now;
while(MathLib::NearestInteger(Frame_Campaign_Menu.ScrollOffset.Y) != TextLib::ToInteger(Frame_Campaign_Menu.DataAttributeGet("startscroll"))) {
	Frame_Campaign_Menu.ScrollOffset.Y = TextLib::ToReal(Frame_Campaign_Menu.DataAttributeGet("startscroll"));
	if(Now-Wat > 200) break;
	yield;
}

UpdateCampaignType();
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::EntrySubmit: {
			switch(Event.ControlId) {
				case "ENTRY_GROUP": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					SendCustomEvent("UpdateGroup", [CampaignId, GroupId, (Event.Control as CMlEntry).Value]);
				}
			}
		}
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON_EXIT": {
					SendCustomEvent("Exit", []);
				}
				case "QUAD_CAMPAIGN": {
					HoldItSteady = True;
					HoldItSteadyLoc = Frame_Campaigns.RelativePosition_V3.X;
					HoldItSteadyMouse = MouseX;
				}
				case "LABEL_GROUP_REMOVE": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					SendCustomEvent("RemoveGroup", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId, GroupId]);
				}
				case "LABEL_MAP_REMOVE": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					declare MapId = Event.Control.DataAttributeGet("mapid");
					declare MapFile = Event.Control.DataAttributeGet("mapfile");
					SendCustomEvent("RemoveMap", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId, GroupId, MapFile]);
				}
				case "QUAD_ADDGROUP": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					SendCustomEvent("AddGroup", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId]);
				}
				case "QUAD_ADDMAP": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					SendCustomEvent("AddMap", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId, GroupId]);
				}
				case "QUAD_BUTTON_NADEOCAMPAIGN": {
					SendCustomEvent("ChangeType", ["Nadeo"]);
				}
				case "QUAD_BUTTON_CUSTOMCAMPAIGN": {
					SendCustomEvent("ChangeType", ["Custom"]);
				}
			}
		}
		case CMlScriptEvent::Type::MouseOver: {
			
		}
		case CMlScriptEvent::Type::MouseOut: {
			
		}
		case CMlScriptEvent::Type::MenuNavigation: {
			switch(Event.MenuNavAction) {
				case CMlScriptEvent::EMenuNavAction::ScrollUp: {
					
				}
				case CMlScriptEvent::EMenuNavAction::ScrollDown: {
					
				}
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "NadeoCampaign": {
					(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
					(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
				}
				case "CustomCampaign": {
					(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
					(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
				}
				case "Show": {
					UpdateCampaignType();
				}
			}
		}
	}
}

if(MouseLeftButton && HoldItSteady) {
	AnimMgr.Flush(Frame_Campaigns);
	Frame_Campaigns.RelativePosition_V3.X = MathLib::Clamp(HoldItSteadyLoc - (HoldItSteadyMouse - MouseX)*3,-CampaignsSize,0.);
}
else if(HoldItSteady) {
	AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^MathLib::NearestInteger(Frame_Campaigns.RelativePosition_V3.X / 45.)*45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
	HoldItSteady = False;
}

CampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;

declare VisibleRatio = 150/(150+Frame_Campaign_Menu.ScrollMax.Y);
Quad_Scrollbar.Size.Y = 150*VisibleRatio;

if(CampaignPosition != LastCampaignPosition) {
	Frame_Campaign_Menu.RelativePosition_V3.X = CampaignPosition;
	LastCampaignPosition = CampaignPosition;
}

if(Frame_Campaign_Menu.ScrollOffset != OldScrollOffset) {
	OldScrollOffset = Frame_Campaign_Menu.ScrollOffset;

	declare ScrollRatio = 0.;
	if(Frame_Campaign_Menu.ScrollMax.Y != 0)
		ScrollRatio = Frame_Campaign_Menu.ScrollOffset.Y / Frame_Campaign_Menu.ScrollMax.Y;
	Quad_Scrollbar.RelativePosition_V3.Y = -ScrollRatio*(150-Quad_Scrollbar.Size.Y)-5;
}
***