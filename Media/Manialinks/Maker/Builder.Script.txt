Void CampaignChanged(Text[] _Data) {
	if(_Data.count > 0) {
		(Page.GetFirstChild("ENTRY_DISPLAYNAME") as CMlEntry).SetText(_Data[0], False);
		(Page.GetFirstChild("ENTRY_MAPFOLDER") as CMlEntry).SetText(_Data[1], False);
		(Page.GetFirstChild("ENTRY_IMAGE") as CMlEntry).SetText(_Data[2], False);
		(Page.GetFirstChild("FRAME_LOADING_CAMPAIGNINFO") as CMlFrame).Hide();
		(Page.GetFirstChild("FRAME_LOADING_ADDCAMPAIGN") as CMlFrame).Hide();
	}
	else {
		(Page.GetFirstChild("ENTRY_DISPLAYNAME") as CMlEntry).SetText("", False);
		(Page.GetFirstChild("ENTRY_MAPFOLDER") as CMlEntry).SetText("", False);
		(Page.GetFirstChild("ENTRY_IMAGE") as CMlEntry).SetText("", False);
		(Page.GetFirstChild("QUAD_BLOCK_CAMPAIGNINFO") as CMlQuad).Show();
		(Page.GetFirstChild("QUAD_BLOCK_ADDCAMPAIGN") as CMlQuad).Hide();
		(Page.GetFirstChild("FRAME_LOADING_CAMPAIGNINFO") as CMlFrame).Hide();
		(Page.GetFirstChild("FRAME_LOADING_ADDCAMPAIGN") as CMlFrame).Hide();
	}
}

Void UpdateCampaignType() {
	declare Text CampaignType for Page;
	if(CampaignType == "Nadeo") {
		(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
		(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
		(Page.GetFirstChild("QUAD_BLOCK_CAMPAIGNINFO") as CMlQuad).Show();
		(Page.GetFirstChild("QUAD_BLOCK_ADDCAMPAIGN") as CMlQuad).Show();
	}
	else if(CampaignType == "Custom") {
		(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
		(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
		if((Page.GetFirstChild("FRAME_CAMPAIGNS") as CMlFrame).Controls.count > 0)
			Page.GetFirstChild("QUAD_BLOCK_CAMPAIGNINFO").Hide();
		else
			Page.GetFirstChild("QUAD_BLOCK_CAMPAIGNINFO").Show();
		(Page.GetFirstChild("QUAD_BLOCK_ADDCAMPAIGN") as CMlQuad).Hide();
	}
}

***Start***
***
Page.GetClassChildren("LOADING", Page.MainFrame, True);

declare Frame_Campaigns = (Page.GetFirstChild("FRAME_CAMPAIGNS") as CMlFrame);
declare Frame_Campaign_Menu = (Page.GetFirstChild("FRAME_CAMPAIGN_MENU") as CMlFrame);
declare Quad_Block_CampaignInfo = (Page.GetFirstChild("QUAD_BLOCK_CAMPAIGNINFO") as CMlQuad);
declare Quad_Block_AddCampaign = (Page.GetFirstChild("QUAD_BLOCK_ADDCAMPAIGN") as CMlQuad);
declare Frame_Loading_CampaignInfo = (Page.GetFirstChild("FRAME_LOADING_CAMPAIGNINFO") as CMlFrame);
declare Frame_Loading_AddCampaign = (Page.GetFirstChild("FRAME_LOADING_ADDCAMPAIGN") as CMlFrame);

declare Frame_Main_Campaign = (Page.GetFirstChild("FRAME_MAIN_CAMPAIGN") as CMlFrame);
declare Frame_Main_Panel = (Page.GetFirstChild("FRAME_MAIN_PANEL") as CMlFrame);

declare HoldItSteady = False;
declare HoldItSteadyLoc = 0.;
declare HoldItSteadyMouse = 0.;

declare End = -1;

declare CampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;
declare LastCampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;

declare CampaignsSize = (Frame_Campaigns.Controls.count-1) * 45.;

Frame_Campaign_Menu.ScrollActive = True;
Frame_Campaign_Menu.ScrollGrid = <15.,15.>;
Frame_Campaign_Menu.ScrollMax = <0.,Frame_Campaign_Menu.GetFirstChild("QUAD_CAMPAIGN_MENU").Size.Y-150>;
if(Frame_Campaign_Menu.ScrollMax.Y < 0) Frame_Campaign_Menu.ScrollMax.Y = 0.;
Frame_Campaign_Menu.ScrollMin = <0.,0.>;

declare OldScrollOffset = Frame_Campaign_Menu.ScrollOffset;
declare OldScrollAnimOffset = Frame_Campaign_Menu.ScrollAnimOffset;

declare Quad_Scrollbar = (Page.GetFirstChild("QUAD_CAMPAIGN_SCROLL") as CMlQuad);

declare WaitingToScroll = False;

if(Frame_Campaign_Menu.ScrollMax.Y > 0) {
	declare VisibleRatio = 150/(150+Frame_Campaign_Menu.ScrollMax.Y);
	Quad_Scrollbar.Show();
	Quad_Scrollbar.Size.Y = 150*VisibleRatio;
	Quad_Scrollbar.RelativePosition_V3.Y = -TextLib::ToInteger(Frame_Campaign_Menu.DataAttributeGet("startscroll"))*(150-Quad_Scrollbar.Size.Y);
}

declare Integer CurrentCampaign for Page;
CurrentCampaign = TextLib::ToInteger(Frame_Campaign_Menu.DataAttributeGet("startcampaign"));
declare LastCampaign = CurrentCampaign;

declare Wat = Now;
while(MathLib::NearestInteger(Frame_Campaign_Menu.ScrollOffset.Y) != TextLib::ToInteger(Frame_Campaign_Menu.DataAttributeGet("startscroll"))) {
	Frame_Campaign_Menu.ScrollOffset.Y = TextLib::ToReal(Frame_Campaign_Menu.DataAttributeGet("startscroll"));
	if(Now-Wat > 200) break;
	yield;
}

Frame_Campaigns.RelativePosition_V3.X = CurrentCampaign*-45.;

UpdateCampaignType();
CampaignChanged([Frame_Campaign_Menu.DataAttributeGet("startcampaignname"),
				Frame_Campaign_Menu.DataAttributeGet("startcampaignfolder"),
				Frame_Campaign_Menu.DataAttributeGet("startcampaignimage")]);

declare HoldScrollbar = False;
declare HoldScrollbarPos = 0.;
***

***Loop***
***
foreach(Event,PendingEvents) {
	switch(Event.Type) {
		case CMlScriptEvent::Type::EntrySubmit: {
			switch(Event.ControlId) {
				case "ENTRY_GROUP": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					SendCustomEvent("UpdateGroup", [CampaignId, GroupId, (Event.Control as CMlEntry).Value]);
				}
				case "ENTRY_DISPLAYNAME": {
					SendCustomEvent("Campaign_DisplayName", [CurrentCampaign^"", (Event.Control as CMlEntry).Value]);
					Frame_Loading_CampaignInfo.Show();
					Frame_Loading_AddCampaign.Show();
				}
				case "ENTRY_MAPFOLDER": {
					SendCustomEvent("Campaign_MapFolder", [CurrentCampaign^"", (Event.Control as CMlEntry).Value]);
					Frame_Loading_CampaignInfo.Show();
					Frame_Loading_AddCampaign.Show();
				}
				case "ENTRY_IMAGE": {
					SendCustomEvent("Campaign_Image", [CurrentCampaign^"", (Event.Control as CMlEntry).Value]);
					Frame_Loading_CampaignInfo.Show();
					Frame_Loading_AddCampaign.Show();
				}
				case "ENTRY_CUSTOMCAMPAIGN": {

				}
			}
		}
		case CMlScriptEvent::Type::MouseClick: {
			switch(Event.ControlId) {
				case "QUAD_BUTTON_EXIT": {
					SendCustomEvent("Exit", []);
				}
				case "QUAD_CAMPAIGN": {
					HoldItSteady = True;
					HoldItSteadyLoc = Frame_Campaigns.RelativePosition_V3.X;
					HoldItSteadyMouse = MouseX;
				}
				case "LABEL_GROUP_REMOVE": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					SendCustomEvent("RemoveGroup", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId, GroupId]);
				}
				case "LABEL_MAP_REMOVE": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					declare MapId = Event.Control.DataAttributeGet("mapid");
					declare MapFile = Event.Control.DataAttributeGet("mapfile");
					SendCustomEvent("RemoveMap", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId, GroupId, MapFile]);
				}
				case "QUAD_ADDGROUP": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					SendCustomEvent("AddGroup", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId]);
				}
				case "QUAD_ADDMAP": {
					declare CampaignId = Event.Control.DataAttributeGet("campaignid");
					declare GroupId = Event.Control.DataAttributeGet("groupid");
					SendCustomEvent("AddMap", [Frame_Campaign_Menu.ScrollOffset.Y^"", CampaignId, GroupId]);
				}
				case "QUAD_BUTTON_NADEOCAMPAIGN": {
					SendCustomEvent("ChangeType", ["Nadeo"]);
					Frame_Loading_CampaignInfo.Show();
					Frame_Loading_AddCampaign.Show();
				}
				case "QUAD_BUTTON_CUSTOMCAMPAIGN": {
					SendCustomEvent("ChangeType", ["Custom"]);
					Frame_Loading_CampaignInfo.Show();
					Frame_Loading_AddCampaign.Show();
				}
				case "QUAD_BACK": {
					if(Event.Control.Parent.Parent.ControlId == "FRAME_CAMPAIGN_CONTROL" && CurrentCampaign-1 >= 0) {
						AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^(CurrentCampaign-1)*-45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					}
				}
				case "QUAD_NEXT": {
					if(Event.Control.Parent.Parent.ControlId == "FRAME_CAMPAIGN_CONTROL" && CurrentCampaign+1 < Frame_Campaigns.Controls.count) {
						AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^(CurrentCampaign+1)*-45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
					}
				}
				case "QUAD_BUTTON_CUSTOMCAMPAIGN_ADD": {
					declare CampaignName = (Page.GetFirstChild("ENTRY_CUSTOMCAMPAIGN") as CMlEntry).Value;
					if(CampaignName == "") continue;
					SendCustomEvent("AddCampaign", [CampaignName]);
					(Page.GetFirstChild("ENTRY_CUSTOMCAMPAIGN") as CMlEntry).Value = "";
				}
				case "LABEL_CAMPAIGN_REMOVE": {
					declare CampaignId = Event.Control.Parent.DataAttributeGet("campaignid");
					SendCustomEvent("RemoveCampaign", [CampaignId]);
				}
				case "QUAD_CAMPAIGN_SCROLL": {
					HoldScrollbar = True;
					HoldScrollbarPos = MouseY-Quad_Scrollbar.RelativePosition_V3.Y;
				}
				case "QUAD_BUTTON_FOLDER": {
					SendCustomEvent("OpenMapsFolder", [CurrentCampaign^""]);
				}
				case "QUAD_BUTTON_REFRESH": {
					SendCustomEvent("Refresh", [Frame_Campaign_Menu.ScrollOffset.Y^""]);
				}
			}
		}
		case CMlScriptEvent::Type::MouseOver: {
			
		}
		case CMlScriptEvent::Type::MouseOut: {
			
		}
		case CMlScriptEvent::Type::MenuNavigation: {
			switch(Event.MenuNavAction) {
				case CMlScriptEvent::EMenuNavAction::ScrollUp: {
					
				}
				case CMlScriptEvent::EMenuNavAction::ScrollDown: {
					
				}
			}
		}
		case CMlScriptEvent::Type::PluginCustomEvent: {
			switch(Event.CustomEventType) {
				case "NadeoCampaign": {
					Quad_Block_CampaignInfo.Show();
					Quad_Block_AddCampaign.Show();
					Frame_Campaigns.RelativePosition_V3.X = 0.;
					//(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
					//(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
				}
				case "CustomCampaign": {
					if(Frame_Campaigns.Controls.count > 0)
						Quad_Block_CampaignInfo.Hide();
					else
						Quad_Block_CampaignInfo.Show();
					Quad_Block_AddCampaign.Hide();
					Frame_Campaigns.RelativePosition_V3.X = 0.;
					//(Page.GetFirstChild("QUAD_BUTTON_CUSTOMCAMPAIGN") as CMlQuad).Colorize = <.0,.2,.4>;
					//(Page.GetFirstChild("QUAD_BUTTON_NADEOCAMPAIGN") as CMlQuad).Colorize = <.2,.2,.2>;
				}
				case "Show": {
					UpdateCampaignType();

					End = -1;

					declare Frame_Main_Campaign = (Page.GetFirstChild("FRAME_MAIN_CAMPAIGN") as CMlFrame);
					declare Frame_Main_Panel = (Page.GetFirstChild("FRAME_MAIN_PANEL") as CMlFrame);
					Frame_Main_Campaign.RelativePosition_V3 = <85., 80.>;
					Frame_Main_Panel.RelativePosition_V3 = <52.5, 80.>;
					AnimMgr.Add(Frame_Main_Campaign, "<frame pos=\"-150 80\" hidden=\"0\"/>", 1000, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Frame_Main_Panel, "<frame pos=\"117.5 80\" hidden=\"0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}
				case "Hide": {
					End = Now;

					AnimMgr.Flush(Frame_Main_Campaign);
					AnimMgr.Flush(Frame_Main_Panel);
					AnimMgr.Add(Frame_Main_Campaign, "<frame pos=\"85 80\" hidden=\"1\"/>", 1000, CAnimManager::EAnimManagerEasing::QuadOut);
					AnimMgr.Add(Frame_Main_Panel, "<frame pos=\"52.5 80\" hidden=\"1\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
				}
				case "CampaignChanged": {
					declare Text[] Data;
					foreach(D, Event.CustomEventData) Data.add(D);
					CampaignChanged(Data);
				}
				case "ChangeCampaign": {
					Frame_Campaigns.RelativePosition_V3.X = TextLib::ToInteger(Event.CustomEventData[0])*-45.;
				}
			}
		}
	}
}

CurrentCampaign = MathLib::NearestInteger(Frame_Campaigns.RelativePosition_V3.X / -45.);
if(CurrentCampaign != LastCampaign) {
	LastCampaign = CurrentCampaign;
	SendCustomEvent("CampaignChanged", [CurrentCampaign^""]);
}

if(MouseLeftButton && HoldItSteady) {
	AnimMgr.Flush(Frame_Campaigns);
	Frame_Campaigns.RelativePosition_V3.X = MathLib::Clamp(HoldItSteadyLoc - (HoldItSteadyMouse - MouseX)*3,-CampaignsSize,0.);
}
else if(HoldItSteady) {
	AnimMgr.Add(Frame_Campaigns, "<frame pos=\""^CurrentCampaign*-45.^" 0\"/>", 500, CAnimManager::EAnimManagerEasing::QuadOut);
	HoldItSteady = False;
}

CampaignPosition = Frame_Campaigns.RelativePosition_V3.X / 45. * 225.;

declare VisibleRatio = 150/(150+Frame_Campaign_Menu.ScrollMax.Y);
Quad_Scrollbar.Size.Y = 150*VisibleRatio;

if(CampaignPosition != LastCampaignPosition) {
	Frame_Campaign_Menu.RelativePosition_V3.X = CampaignPosition;
	LastCampaignPosition = CampaignPosition;
}

if(HoldScrollbar && MouseLeftButton) {
	Quad_Scrollbar.RelativePosition_V3.Y = MathLib::Clamp(MouseY-HoldScrollbarPos,Quad_Scrollbar.Size.Y-150,0.);
	Frame_Campaign_Menu.ScrollOffset.Y = (MouseY-HoldScrollbarPos)/(Quad_Scrollbar.Size.Y-150)*Frame_Campaign_Menu.ScrollMax.Y;
}
else {
	if(Frame_Campaign_Menu.ScrollOffset != OldScrollOffset) {
		OldScrollOffset = Frame_Campaign_Menu.ScrollOffset;

		declare ScrollRatio = 0.;
		if(Frame_Campaign_Menu.ScrollMax.Y != 0)
			ScrollRatio = Frame_Campaign_Menu.ScrollOffset.Y / Frame_Campaign_Menu.ScrollMax.Y;
		Quad_Scrollbar.RelativePosition_V3.Y = -ScrollRatio*(150-Quad_Scrollbar.Size.Y);
	}

	HoldScrollbar = False;
}

if(End != -1) {
	if(Now - End > 1000) {
		End = -1;
		SendCustomEvent("Hide_Response", []);
	}
}

foreach(Control in Page.GetClassChildren_Result) {
	Control.RelativeRotation += Period / 5.0;
}
***