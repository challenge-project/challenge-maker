#RequireContext CTmMode

#Include "Libs/Challenge/Vehicle.Script.txt" as Vehicle

main() {
	wait(Players.count > 0);

	UIManager.UIAll.OverlayHideBackground = True;
	UIManager.UIAll.OverlayHideNotices = True;
	UIManager.UIAll.OverlayHideMapInfo = True;
	UIManager.UIAll.OverlayHideOpponentsInfo = True;
	UIManager.UIAll.OverlayHideChat = True;
	UIManager.UIAll.OverlayHideCheckPointList = True;
	UIManager.UIAll.OverlayHideCountdown = True;
	UIManager.UIAll.OverlayHideChrono = True;
	UIManager.UIAll.OverlayHideSpeedAndDist = True;
	UIManager.UIAll.OverlayHidePersonnalBestAndRank = True;
	UIManager.UIAll.OverlayHidePosition = True;
	UIManager.UIAll.OverlayHideMultilapInfos = True;
	UIManager.UIAll.OverlayHideSpectatorControllers = True;
	UIManager.UIAll.OverlayHideSpectatorInfos = True;
	UIManager.UIAll.OverlayChatHideAvatar = True;
	UIManager.UIAll.SmallScoreTableVisibility = CUIConfig::EVisibility::ForcedHidden;
	UIManager.UIAll.ScoreTableOnlyManialink = True;

	declare Vehicles = Vehicle::FromFile("Media/Vehicle.json");
	declare RealVehicles = Vehicle::Load(Vehicles, This);

	RequestLoadMap();
	wait(MapLoaded);

	declare Text Ghost_Url for Players[0].User;
	declare Text Ghost_FileName for Players[0].User;

	declare Text Ghost_ReplayFile for Players[0].User;
	Ghost_ReplayFile = "";

	declare DownloadTask = DataFileMgr.Ghost_Download(Ghost_FileName, Ghost_Url);
	wait(!DownloadTask.IsProcessing);
	if(DownloadTask.HasSucceeded) {
		declare SaveTask = DataFileMgr.Replay_Save(Ghost_FileName, Map, DownloadTask.Ghost);
		wait(!SaveTask.IsProcessing);
		if(SaveTask.HasSucceeded) {
			Ghost_ReplayFile = Ghost_FileName;
		}
		else {
			UIManager.UIAll.SendChat("Something has got wrong with saving the replay.");
			sleep(3000);
		}
		DataFileMgr.TaskResult_Release(SaveTask.Id);
	}
	DataFileMgr.TaskResult_Release(DownloadTask.Id);
}